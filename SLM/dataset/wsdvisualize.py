# -*- coding: utf-8 -*-
"""WSDVisualize.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GarzNmVXcGidsGng5oCKMi1g68E-UhW8
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the data
data = pd.read_csv('/content/drive/MyDrive/dataset/CertificateDatasets/Washington_State_Certified_Public_Accountants.csv')

# Data preprocessing
data['Original Issue Date'] = pd.to_datetime(data['Original Issue Date'])
data['Expiration Date'] = pd.to_datetime(data['Expiration Date'])

# Convert datetime to a numerical value
baseline_date = pd.to_datetime('1900-01-01')
data['Original Issue Days'] = (data['Original Issue Date'] - baseline_date).dt.days
data['Expiration Days'] = (data['Expiration Date'] - baseline_date).dt.days

# Fill missing values for numeric columns
numeric_cols = data.select_dtypes(include=[np.number]).columns
data[numeric_cols] = data[numeric_cols].fillna(data[numeric_cols].mean())

# Select features and target
X = data[['Original Issue Days']]
y = data['Expiration Days']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model building
model = LinearRegression()
model.fit(X_train, y_train)

# Making predictions
y_pred = model.predict(X_test)

# Model evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R2 Score:", r2)

# Plotting for visual analysis
plt.scatter(X_test, y_test, color='orange', alpha=0.5, label='Actual')  # Set color to orange and translucency to 50%
plt.plot(X_test, y_pred, color='blue', linewidth=3, label='Predicted')
plt.xlabel('Original Issue Days')
plt.ylabel('Expiration Days')
plt.title('License Expiration Date Prediction')
plt.legend()
plt.show()

